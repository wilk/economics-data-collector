version: '2'

services:
  setup-python:
    # just one command so the execution take place in the same context
    command: bash -c "virtualenv . && source ./bin/activate && pip install -r requirements.txt"
    image: data.python3:1
    build:
      dockerfile: docker/Dockerfile
      context: ./python
    volumes:
      - ./python:/opt/app

  cleaner:
    # activate the virtualenv before starting the cleaner
    command: bash -c "source ./bin/activate && python src/cleaner.py"
    image: data.python3:1
    environment:
      - CLEANED_FOLDER=cleaned
      - SOURCE_FOLDER=samples
    volumes:
      - ./python:/opt/app

  collector:
    # activate the virtualenv before starting the cleaner
    command: bash -c "source ./bin/activate && python src/collector.py"
    image: data.python3:1
    environment:
      - CLEANED_FOLDER=cleaned
      - TAGS_FILE=config/sample-tags.json
      - EXPENSE_ACCOUNT=expenses
      - INCOME_ACCOUNT=income
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=collector
      - DB_COLLECTION_NAME=collected
    volumes:
      - ./python:/opt/app
    depends_on:
      - mongodb

  setup-golang:
    command: glide install
    image: data.golang1.9:1
    build:
      dockerfile: docker/Dockerfile
      context: go
    volumes:
      - ./go:/go/src/app

  goxfer:
    command: go run src/goxfer.go
    image: data.golang1.9:1
    environment:
      - DB_HOST=mongodb
      - DB_PORT=27017
      - DB_NAME=collector
      - DB_COLLECTION_NAME=collected
      - BUXFER_API_ENDPOINT=https://www.buxfer.com/api
      - BUXFER_USERNAME=your_buxfer_username
      - BUXFER_PASSWORD=your_buxfer_password
      - BULK_LENGHT=20
      - EXPENSE_ACCOUNT=expenses
      - INCOME_ACCOUNT=income
      - EXPENSE_ACCOUNT_BUXFER=your_expense_account
      - INCOME_ACCOUNT_BUXFER=your_income_account
    volumes:
      - ./go:/go/src/app
    depends_on:
      - mongodb

  mongodb:
    image: mongo:3.4
    ports:
      - "27017:27017"
    volumes:
     - db_mongo:/data/db:rw

volumes:
  db_mongo: